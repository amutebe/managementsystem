# Generated by Django 3.0.2 on 2020-08-06 08:22

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='CAR Priority')),
            ],
        ),
        migrations.CreateModel(
            name='Carstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='CAR status')),
            ],
        ),
        migrations.CreateModel(
            name='Carsverification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='CAR verification')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_code', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='Company Code:')),
                ('company_name', models.TextField(verbose_name='Company Name:')),
            ],
        ),
        migrations.CreateModel(
            name='CorrectivePreventiveAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Proposed corrective or preventive Action')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Department ID:')),
                ('dept_name', models.TextField(verbose_name='Name:')),
            ],
        ),
        migrations.CreateModel(
            name='NonConformityAction',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Non conformity ID.:')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Containment action')),
            ],
        ),
        migrations.CreateModel(
            name='NonConformitySource',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Non conformity ID.:')),
                ('description', models.CharField(max_length=200, verbose_name='Non Conformity')),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sex', models.CharField(max_length=200)),
                ('survived', models.BooleanField()),
                ('age', models.FloatField()),
                ('ticket_class', models.PositiveSmallIntegerField()),
                ('embarked', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RootCause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Root cause analysis')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('price', models.FloatField(null=True)),
                ('category', models.CharField(choices=[('Indoor', 'Indoor'), ('Out door', 'Out door')], max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('tags', models.ManyToManyField(to='accounts.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Out of stock', 'Out of stock'), ('Delivered', 'Delivered')], max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Customer')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Product')),
            ],
        ),
        migrations.CreateModel(
            name='NonConformityList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Description.:')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.NonConformitySource', verbose_name='Source')),
            ],
        ),
        migrations.CreateModel(
            name='employees',
            fields=[
                ('employeeID', models.CharField(default='TEGA473', max_length=10, primary_key=True, serialize=False, verbose_name='Employee ID')),
                ('registered', models.DateField(verbose_name='Reg. Date:')),
                ('firstName', models.TextField(blank=True, verbose_name='First Name')),
                ('lastName', models.TextField(verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='accounts.Department', verbose_name='Department:')),
            ],
        ),
        migrations.CreateModel(
            name='car',
            fields=[
                ('car_number', models.CharField(default='TEGA06082020598', max_length=200, primary_key=True, serialize=False, verbose_name='Corrective action no.:')),
                ('car_dateoccur', models.DateField(error_messages={'unique': 'The Geeks Field you enetered is not unique.'}, verbose_name='Date of Occurence:')),
                ('car_time', models.TimeField(default=datetime.datetime.now, verbose_name='Time:')),
                ('car_issue', models.TextField(blank=True, null=True, verbose_name='Non conformity/Issue:')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Describe:')),
                ('CAother', models.TextField(blank=True, help_text='Specify other corrective/containment action', null=True, verbose_name='Specify Other:')),
                ('Rootother', models.TextField(blank=True, help_text='Specify other root cause', null=True, verbose_name='Specify Other:')),
                ('correctiveactionOther', models.TextField(blank=True, help_text='Specify other Proposed corrective/Preventive action', null=True, verbose_name='Specify Other:')),
                ('proposedDate', models.DateField(verbose_name='CA/PA proposal Date:')),
                ('deadline', models.DateField(verbose_name='Implementation Deadline:')),
                ('car_date', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('verification_status', models.CharField(choices=[('Closed', 'Close'), ('Rejected', 'Reject')], max_length=200, null=True)),
                ('verification_failed', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('entered_by', models.TextField(blank=True, null=True, verbose_name='Entered by:')),
                ('action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='containmentaction', to='accounts.NonConformityAction', verbose_name='Containment action')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entered_by', to=settings.AUTH_USER_MODEL)),
                ('car_dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Department', to='accounts.Department', verbose_name='Affected Department ID:')),
                ('car_userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Reported by:')),
                ('correctiveaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.CorrectivePreventiveAction', verbose_name='Corrective/Preventive Action')),
                ('implementedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='implementedby_user', to=settings.AUTH_USER_MODEL, verbose_name='Implemented by')),
                ('nonconf', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.NonConformitySource')),
                ('priority', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.CarPriority', verbose_name='CAR Priority:')),
                ('proposedby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposedby_user', to=settings.AUTH_USER_MODEL, verbose_name='Proposed by')),
                ('rootcause', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.RootCause', verbose_name='Root Cause Analysis')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Carstatus', verbose_name='CAR status:')),
                ('verification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.Carsverification', verbose_name='CAR verification:')),
            ],
        ),
    ]
