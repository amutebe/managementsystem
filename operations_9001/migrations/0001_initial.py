# Generated by Django 3.0.2 on 2020-08-06 08:22

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('issues_9001', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Incident Classification')),
            ],
        ),
        migrations.CreateModel(
            name='costs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incident cost')),
            ],
        ),
        migrations.CreateModel(
            name='document_format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Document format')),
            ],
        ),
        migrations.CreateModel(
            name='document_location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Document location')),
            ],
        ),
        migrations.CreateModel(
            name='document_standard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Standard')),
            ],
        ),
        migrations.CreateModel(
            name='document_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Document type')),
            ],
        ),
        migrations.CreateModel(
            name='equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='incident_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Incident Description')),
            ],
        ),
        migrations.CreateModel(
            name='incident_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Type of feedback')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_incidentregister',
            fields=[
                ('incident_number', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='Incident No.:')),
                ('date', models.DateField(null=True, verbose_name='Date:')),
                ('time', models.TimeField(null=True, verbose_name='Time (24Hr):')),
                ('reference', models.CharField(choices=[('1', 'Project'), ('2', 'Process'), ('3', 'Other')], max_length=200, verbose_name='Reference')),
                ('other', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='register_entered_byy', to=settings.AUTH_USER_MODEL)),
                ('incident_description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.incident_description', verbose_name='incidentdescription:')),
                ('incidentype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.incident_type', verbose_name='incidentype:')),
            ],
        ),
        migrations.CreateModel(
            name='noteffective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Reason not effective')),
            ],
        ),
        migrations.CreateModel(
            name='process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Process')),
            ],
        ),
        migrations.CreateModel(
            name='prod_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Program Description')),
            ],
        ),
        migrations.CreateModel(
            name='qmsstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='rootcause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Root Cause')),
            ],
        ),
        migrations.CreateModel(
            name='schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Maintenence schedule')),
            ],
        ),
        migrations.CreateModel(
            name='status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='train_desc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Training Description')),
            ],
        ),
        migrations.CreateModel(
            name='train_objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Training Objective')),
            ],
        ),
        migrations.CreateModel(
            name='train_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Training Status')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_trainingregister',
            fields=[
                ('training_number', models.CharField(default='Comp-TR-06082020173', max_length=200, primary_key=True, serialize=False, verbose_name='Training no.:')),
                ('train_date', models.DateField(null=True, verbose_name='Training Date:')),
                ('nature', models.CharField(choices=[('1', 'Planned'), ('2', 'Not Planned')], max_length=200, null=True)),
                ('training_desc', models.TextField(blank=True, null=True, verbose_name='Training Description:')),
                ('trainingplanid', models.TextField(blank=True, null=True, verbose_name='Training Plan ID:')),
                ('training', models.TextField(blank=True, null=True, verbose_name='Training:')),
                ('location', models.TextField(blank=True, null=True, verbose_name='Location:')),
                ('trainee', models.TextField(blank=True, null=True, verbose_name='Trainee:')),
                ('completion_date', models.DateField(verbose_name='Completion Date:')),
                ('job', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=200, null=True, verbose_name='Employee Job performance level has raised ')),
                ('skills', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=200, null=True, verbose_name='Training skills applied by trainee ')),
                ('indicators', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=200, null=True, verbose_name='Indicators exist that prove the employee benefited from the acquired skills in this Training course')),
                ('able', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=200, null=True, verbose_name='Employee Able to train others')),
                ('decision', models.CharField(choices=[('1', 'Effective'), ('2', 'Not Effective')], max_length=200, null=True, verbose_name='Evaluation Decision:')),
                ('reasonother', models.TextField(blank=True, null=True, verbose_name='If Not Effective, reason')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_entered_by', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='noteffectreason', to='operations_9001.noteffective', verbose_name='If Not Effective, other reason:')),
                ('tainee_dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traineeDepartment', to='accounts.Department', verbose_name='Trainee Department ID:')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reg_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_trainingplanner',
            fields=[
                ('plan_number', models.CharField(default='Comp-TP-06082020162', max_length=200, primary_key=True, serialize=False, verbose_name='Plan no.:')),
                ('trainng_date', models.DateField(null=True, verbose_name='Training Date:')),
                ('type', models.CharField(choices=[('1', 'Planned'), ('2', 'Not Planned')], max_length=200)),
                ('other', models.TextField(blank=True, null=True, verbose_name='Other training description:')),
                ('trainaudience', models.CharField(choices=[('1', 'Employee'), ('2', 'Other')], max_length=200, null=True)),
                ('other_audience', models.TextField(blank=True, null=True, verbose_name='Other Training Audience:')),
                ('start', models.DateField(verbose_name='Start Date:')),
                ('end', models.DateField(verbose_name='End Date:')),
                ('trainlocation', models.CharField(choices=[('1', 'Company Premise'), ('2', 'Other')], max_length=200, null=True)),
                ('other_location', models.TextField(blank=True, null=True, verbose_name='Other Location:')),
                ('trainer', models.TextField(blank=True, null=True, verbose_name='Trainer:')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Resource:')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Give Reason:')),
                ('rescheduled', models.DateField(blank=True, null=True, verbose_name='Rescheduled Date:')),
                ('completion', models.DateField(blank=True, null=True, verbose_name='Completion Date:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='Date Approved:')),
                ('verification_status', models.CharField(blank=True, max_length=200, null=True)),
                ('verification_failed', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('due', models.DateField(blank=True, null=True, verbose_name='When:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainplannerApprov_by', to=settings.AUTH_USER_MODEL)),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='train_desc', to='operations_9001.train_desc')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='planner_entered_by', to=settings.AUTH_USER_MODEL)),
                ('objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='train_objective', to='operations_9001.train_objective')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:')),
                ('trainplannerstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.qmsstatus', verbose_name='Verification Status:')),
                ('verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.RISK_OPPverification', verbose_name='Verification:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_qmsplanner',
            fields=[
                ('planner_number', models.CharField(default='Comp-QP-06082020227', max_length=200, primary_key=True, serialize=False, verbose_name='Planner no.:')),
                ('plan_date', models.DateField(verbose_name='Plan Date:')),
                ('start', models.DateField(verbose_name='Start Date:')),
                ('end', models.DateField(verbose_name='End Date:')),
                ('details', models.TextField(blank=True, help_text='Additional Description', null=True, verbose_name='Additional Description:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='Date Approved:')),
                ('verification_status', models.CharField(blank=True, max_length=200, null=True)),
                ('verification_failed', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('due', models.DateField(blank=True, null=True, verbose_name='When:')),
                ('completion', models.DateField(blank=True, null=True, verbose_name='Completion Date:')),
                ('scheduled', models.DateField(blank=True, null=True, verbose_name='Rescheduled Date:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qmsApprov_by', to=settings.AUTH_USER_MODEL)),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progdesc', to='operations_9001.prod_description', verbose_name='Program description:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qms_entered_by', to=settings.AUTH_USER_MODEL)),
                ('planner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qms_by', to=settings.AUTH_USER_MODEL)),
                ('qmsstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.qmsstatus', verbose_name='Verification Status:')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:')),
                ('verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.RISK_OPPverification', verbose_name='Verification:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_processtable',
            fields=[
                ('process_number', models.CharField(default='Comp-Pr-06082020230', max_length=200, primary_key=True, serialize=False, verbose_name='Process ID:')),
                ('date', models.DateTimeField(null=True, verbose_name='Date Registered:')),
                ('processcategory', models.CharField(choices=[('1', 'Key Process'), ('2', 'Support Process'), ('3', 'Outsourced Process'), ('4', 'Other')], max_length=200, verbose_name='Process Category')),
                ('purpose', models.TextField(blank=True, null=True, verbose_name='Purpose')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='own', to='accounts.employees', verbose_name='Owner:')),
                ('process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.process', verbose_name='procestable:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_incidentregisterStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otherootcause', models.TextField(blank=True, null=True, verbose_name='Other Root Cause:')),
                ('correction', models.CharField(blank=True, choices=[('1', 'Redo/Rework'), ('2', 'Replace'), ('3', 'Refund'), ('4', 'Repair'), ('5', 'Suspend'), ('6', 'Customer Concession obtained'), ('7', 'Escalated'), ('8', 'Other')], max_length=50, null=True, verbose_name='Short Term Correction/Containment:')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Additional Description:')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Date:')),
                ('completion', models.DateField(verbose_name='Completion Date:')),
                ('my_field', multiselectfield.db.fields.MultiSelectField(choices=[('item_key1', 'Item title 1.1'), ('item_key2', 'Item title 1.2'), ('item_key3', 'Item title 1.3'), ('item_key4', 'Item title 1.4'), ('item_key5', 'Item title 1.5')], max_length=49)),
                ('costdescription', models.TextField(blank=True, null=True, verbose_name='Incident Cost Description:')),
                ('lesson', models.TextField(blank=True, null=True, verbose_name='Lesson learnt:')),
                ('status', models.TextField(blank=True, null=True, verbose_name='Complaint Status:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned:')),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.classification', verbose_name='Incident Classification:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentstaff', to=settings.AUTH_USER_MODEL)),
                ('escalated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escalated', to=settings.AUTH_USER_MODEL, verbose_name='Responsible:')),
                ('incident_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.mod9001_incidentregister', verbose_name='Incident Number:')),
                ('rootcause', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.rootcause', verbose_name='Root Cause:')),
            ],
        ),
        migrations.AddField(
            model_name='mod9001_incidentregister',
            name='processname',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.process', verbose_name='If Process, name:'),
        ),
        migrations.CreateModel(
            name='mod9001_document_manager',
            fields=[
                ('document_date', models.DateField(verbose_name='Date:')),
                ('document_number', models.CharField(default='TEGA-Q-06082020272', max_length=200, primary_key=True, serialize=False, verbose_name='Document no.:')),
                ('origin', models.CharField(choices=[('1', 'Internal'), ('2', 'External')], max_length=200, null=True)),
                ('document_id', models.TextField(blank=True, help_text='Ref No.', null=True, verbose_name='Document ID:')),
                ('doc_name', models.TextField(blank=True, help_text='Document Name', null=True, verbose_name='Document Name:')),
                ('clause', models.TextField(blank=True, help_text='Document ID', null=True, verbose_name='Document ID:')),
                ('version', models.TextField(blank=True, help_text='Version', null=True, verbose_name='Version No:')),
                ('retention', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '>5')], max_length=200, null=True)),
                ('status', models.CharField(choices=[('1', 'Current'), ('2', 'Obsolete')], max_length=200, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='uploads/', verbose_name='Please upload relevant document')),
                ('doc_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type', to='operations_9001.document_type', verbose_name='Document Type:')),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='format', to='operations_9001.document_format', verbose_name='Format:')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='operations_9001.document_location', verbose_name='Location:')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='accounts.employees', verbose_name='Owner:')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard', to='operations_9001.document_standard', verbose_name='Standard:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_customeregistration',
            fields=[
                ('plan_number', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='Plan no.:')),
                ('date_posted', models.DateField(null=True, verbose_name='Date Posted:')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Customer Name:')),
                ('manager', models.TextField(blank=True, null=True, verbose_name='Account Manager:')),
                ('contact', models.TextField(blank=True, null=True, verbose_name='Customer Contact Person:')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Customer Business Phone No:')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Customer Business Email: ')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Customer Business Address: ')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_entered_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_calibration',
            fields=[
                ('calibration_date', models.DateField(verbose_name='Date:')),
                ('calibration_number', models.CharField(default='TEGA-C-06082020107', max_length=200, primary_key=True, serialize=False, verbose_name='Calibration no.:')),
                ('type', models.TextField(blank=True, help_text='Calibration type', null=True, verbose_name='Calibration type:')),
                ('device_id', models.TextField(blank=True, help_text='Device ID', null=True, verbose_name='Device ID:')),
                ('manufacturer', models.TextField(blank=True, help_text='Device Manufacturer', null=True, verbose_name='Manufacturer:')),
                ('range', models.TextField(blank=True, help_text='Range', null=True, verbose_name='Range:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('calibrated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doneby', to='accounts.employees', verbose_name='Done by:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cal_entered_by', to=settings.AUTH_USER_MODEL)),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calstandard', to='operations_9001.document_standard', verbose_name='Standard:')),
            ],
        ),
        migrations.CreateModel(
            name='maintenance',
            fields=[
                ('maintenance_number', models.CharField(default='TEGA-M-06082020116', max_length=200, primary_key=True, serialize=False, verbose_name='Maintenance no.:')),
                ('id', models.TextField(blank=True, help_text='Enter ID or Serial #', null=True, verbose_name='ID:')),
                ('manufacturer', models.TextField(blank=True, help_text='Manufacturer', null=True, verbose_name='Manufacturer:')),
                ('date', models.DateField(verbose_name='Manufacture Date:')),
                ('location', models.TextField(blank=True, help_text='Location', null=True, verbose_name='Location:')),
                ('detials', models.TextField(blank=True, help_text='Details', null=True, verbose_name='Details:')),
                ('maintenanceby', models.CharField(choices=[('1', 'Internal technician'), ('2', 'External technician')], max_length=200)),
                ('name', models.TextField(blank=True, help_text='Name', null=True, verbose_name='Name of Techncian:')),
                ('parts', models.TextField(blank=True, help_text='Parts replaced', null=True, verbose_name='Parts replaced:')),
                ('notes', models.TextField(blank=True, help_text='Notes', null=True, verbose_name='Notes:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_entered_by', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Equipment', to='operations_9001.equipment', verbose_name='Equipment:')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Schedule', to='operations_9001.schedule', verbose_name='Schedule:')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='accounts.employees', verbose_name='user:')),
            ],
        ),
        migrations.AddField(
            model_name='incident_description',
            name='incident_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidentype', to='operations_9001.incident_type', verbose_name='Incident Type:'),
        ),
    ]
