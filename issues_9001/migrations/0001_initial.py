# Generated by Django 3.0.2 on 2020-08-06 08:22

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='approval_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Approval status')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='contextdetails',
            fields=[
                ('context_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Risk Context ID:')),
                ('cont_desc', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='InterestedParties',
            fields=[
                ('IP_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Interested party ID:')),
                ('IP_name', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_interestedParties',
            fields=[
                ('ip_number', models.CharField(default='TEGA-IP-Q-06082020877', max_length=200, primary_key=True, serialize=False, verbose_name='IP No.:')),
                ('analysis_date', models.DateField(verbose_name='Date of Analysis:')),
                ('context', models.CharField(choices=[('1', 'Internal IP'), ('2', 'External IP')], max_length=200)),
                ('internal_issues', models.CharField(blank=True, choices=[('1', 'Employee/Staff'), ('2', 'Executive Management'), ('3', 'Top Management')], max_length=200, null=True)),
                ('external_issues', models.CharField(blank=True, choices=[('1', 'Customers'), ('2', 'Regulators'), ('3', 'Hardware/Equipment Suppliers'), ('4', 'Traning providers'), ('5', 'Security providers'), ('6', 'Internet providers'), ('7', 'Insurance providers'), ('8', 'Auditors'), ('9', 'Certification bodies'), ('10', 'Inspectors'), ('11', 'Business partners'), ('12', 'Competitors'), ('13', 'Neighbourhood'), ('14', 'Local authorities'), ('15', 'Family')], max_length=200, null=True)),
                ('quality_needs', models.CharField(choices=[('1', 'Communication'), ('2', 'Reporting'), ('3', 'Tax complaince'), ('4', 'CSR'), ('5', 'Time payment for services/products'), ('6', 'Timely delivery'), ('7', 'Safe work enviroment'), ('8', 'Operation support'), ('9', 'Work equipment'), ('10', 'Training'), ('11', 'Clear vision'), ('12', 'Quality support'), ('13', 'Performance feedback'), ('14', 'Contractual complaince'), ('15', 'legal complaince'), ('16', 'Business growth'), ('17', 'Performance')], max_length=200)),
                ('description', models.TextField(blank=True, help_text='Please give description if any', null=True, verbose_name='Description:')),
                ('interestedparties', models.CharField(choices=[('1', 'Control'), ('2', 'Influence'), ('3', 'Influence and Control')], max_length=200)),
                ('companyinterestedparties', models.CharField(choices=[('1', 'Control'), ('2', 'Influence'), ('3', 'Influence and Control')], max_length=200)),
                ('priority', models.CharField(choices=[('1', 'P1'), ('2', 'P2'), ('3', 'P3')], max_length=200, verbose_name='Priority:')),
                ('actiontaken', models.CharField(choices=[('1', 'Training and awareness'), ('2', 'Customer satisfaction survey'), ('3', 'Performance monitoring'), ('4', 'Service Level Management'), ('5', 'Tax Compliance/Policing'), ('6', 'Auditing'), ('7', 'Contract management'), ('8', 'Compliance reviews'), ('9', 'Others')], max_length=200, verbose_name='Action to Manage IP:')),
                ('actionOther', models.TextField(blank=True, null=True, verbose_name='Other, specify')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('due', models.DateField(null=True, verbose_name='When:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='Date Approved:')),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.employees', verbose_name='Lead Analyst:')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='IPApprov_by', to=settings.AUTH_USER_MODEL)),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interested_entered_by', to=settings.AUTH_USER_MODEL)),
                ('responsibility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='IPresponsibility', to=settings.AUTH_USER_MODEL, verbose_name='Responsibility:')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_issues',
            fields=[
                ('issue_number', models.CharField(default='TEGA-CT-Q-0608202048', max_length=200, primary_key=True, serialize=False, verbose_name='Issue no.:')),
                ('analysis_date', models.DateField(verbose_name='Date of Analysis:')),
                ('context', models.CharField(choices=[('1', 'Internal Issues'), ('2', 'External Issues'), ('3', 'Process Issues')], max_length=200)),
                ('internal_issues', models.CharField(blank=True, choices=[('1', 'Organisational Culture'), ('2', 'Organisational Knowledge'), ('3', 'Company Values'), ('4', 'ICT Infrastructure'), ('5', 'Available Resources'), ('6', 'Organisational Structure'), ('7', 'Strength'), ('8', 'Weaknesses'), ('9', 'Other')], max_length=200, null=True)),
                ('external_issues', models.CharField(blank=True, choices=[('1', 'Legal and Regulatory requirements'), ('2', 'Economic enviroment'), ('3', 'Cultural enviroment'), ('4', 'Political enviroment'), ('5', 'Competitive enviroment'), ('6', 'Social enviroment'), ('7', 'Threats'), ('8', 'Opportunities'), ('9', 'Other')], max_length=200, null=True)),
                ('process_issues', models.CharField(blank=True, choices=[('1', 'Strength'), ('2', 'Weaknesses'), ('3', 'Opportunities'), ('4', 'Threats')], max_length=200, null=True)),
                ('otherIssue', models.TextField(blank=True, help_text='Please specify other', null=True, verbose_name='Other Issue:')),
                ('description', models.TextField(blank=True, help_text='Please give description if any', null=True, verbose_name='Description:')),
                ('mitigation', models.TextField(blank=True, help_text='Please give description if any', null=True, verbose_name='Mitigation Action:')),
                ('due', models.DateField(blank=True, null=True, verbose_name='When:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='Date Approved:')),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyst', to='accounts.employees', verbose_name='Lead Analyst:')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Approv_by', to=settings.AUTH_USER_MODEL)),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issue_entered_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='process_OpportunitiesThreats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Process Opportunities/Threats')),
            ],
        ),
        migrations.CreateModel(
            name='process_StrengthWeakness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Process Strength/Weakness')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementCategory',
            fields=[
                ('cat_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Category ID:')),
                ('cat_name', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='residuerisklikelihood',
            fields=[
                ('likelihood_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Risk likelihood ID:')),
                ('likelihood_desc', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='residueriskseverity',
            fields=[
                ('riskseverity_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Risk Severity ID:')),
                ('riskseverity_desc', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='RISK_OPPverification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='CAR verification')),
            ],
        ),
        migrations.CreateModel(
            name='riskdesc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_description', models.TextField(verbose_name='Risk description:')),
            ],
        ),
        migrations.CreateModel(
            name='risklikelihood',
            fields=[
                ('likelihood_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Risk likelihood ID:')),
                ('likelihood_desc', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='riskmitigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_mitigation', models.TextField(verbose_name='Risk Mitigation:')),
            ],
        ),
        migrations.CreateModel(
            name='riskseverity',
            fields=[
                ('riskseverity_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Risk Severity ID:')),
                ('riskseverity_desc', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='risktreat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_desc', models.TextField(verbose_name='Description:')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.Country')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_risks',
            fields=[
                ('risk_number', models.CharField(default='TEGA-RA-06082020230', max_length=200, primary_key=True, serialize=False, verbose_name='RISK No.:')),
                ('risk_date', models.DateField(verbose_name='Date of analysis:')),
                ('issue_description', models.TextField(blank=True, null=True, verbose_name='Context Description:')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Risk Description:')),
                ('riskrating', models.IntegerField(blank=True, null=True, verbose_name='Risk Rating:')),
                ('riskrank', models.CharField(blank=True, max_length=6, null=True, verbose_name='Risk category:')),
                ('residueriskrating', models.IntegerField(blank=True, null=True, verbose_name='Risk Rating:')),
                ('residueriskrank', models.CharField(blank=True, max_length=6, null=True, verbose_name='Risk category:')),
                ('retainreason', models.TextField(blank=True, null=True, verbose_name='You chose retain, please give reason:')),
                ('mitigation', models.TextField(blank=True, help_text='Please describe other mitigation', null=True, verbose_name='Other, please specify:')),
                ('mitigationdesc', models.TextField(blank=True, help_text='Please give risk mitigation details', null=True, verbose_name='Please describe if any:')),
                ('evidence', models.TextField(blank=True, null=True, verbose_name='Evidence of documented information:')),
                ('document', models.FileField(blank=True, null=True, upload_to='uploads/', verbose_name='Please upload evidence')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('due', models.DateField(blank=True, null=True, verbose_name='When:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='Date Approved:')),
                ('record_type', models.TextField(blank=True, help_text='Specifies whether the record is risk or opprotunity entry', null=True, verbose_name='Record Type:')),
                ('verification_status', models.CharField(blank=True, max_length=200, null=True)),
                ('verification_failed', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risk_OPPApprov_by', to=settings.AUTH_USER_MODEL)),
                ('assessor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuenumber', to='accounts.employees', verbose_name='Lead Assessor:')),
                ('contextdetails', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contextdetail', to='issues_9001.contextdetails', verbose_name='Context:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risk_entered_by', to=settings.AUTH_USER_MODEL)),
                ('ip_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='issues_9001.mod9001_interestedParties', verbose_name='IP number:')),
                ('issue_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='issues_9001.mod9001_issues', verbose_name='Issue number:')),
                ('likelihood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='risklikelihood', to='issues_9001.risklikelihood', verbose_name='Risk likelihood:')),
                ('residuelikelihood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residuerisklikelihood', to='issues_9001.residuerisklikelihood', verbose_name='Risk likelihood:')),
                ('residueseverity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='residuerisklikelihood', to='issues_9001.residueriskseverity', verbose_name='Risk Severity:')),
                ('responsibility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='riskresponsibility', to=settings.AUTH_USER_MODEL, verbose_name='Responsibility:')),
                ('riskdescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='riskdescription', to='issues_9001.riskdesc', verbose_name='Risk Description:')),
                ('riskmitigation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='riskmitigation', to='issues_9001.riskmitigation', verbose_name='Risk Mitigation:')),
                ('risktreatment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='risktreatment', to='issues_9001.risktreat', verbose_name='Risk Treatment:')),
                ('severity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='riskseverity', to='issues_9001.riskseverity', verbose_name='Risk Severity:')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:')),
                ('verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.RISK_OPPverification', verbose_name='Verification:')),
            ],
        ),
        migrations.CreateModel(
            name='mod9001_regulatoryReq',
            fields=[
                ('regulatory_number', models.CharField(default='TEGA-IP-LRO-Q-06082020687', max_length=200, primary_key=True, serialize=False, verbose_name='IP No.:')),
                ('registered', models.DateField(verbose_name='Date of registration:')),
                ('otherCategory', models.TextField(blank=True, null=True, verbose_name='Other category:')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Describe:')),
                ('document', models.TextField(blank=True, null=True, verbose_name='Document Stipulating the Requirment:')),
                ('otherInterestedParty', models.TextField(blank=True, null=True, verbose_name='Other interested party:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('due', models.DateField(null=True, verbose_name='When:')),
                ('rejected', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name='Date Approved:')),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.employees', verbose_name='Lead Analyst:')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reqApprov_by', to=settings.AUTH_USER_MODEL)),
                ('cat_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RequirementCategory', to='issues_9001.RequirementCategory', verbose_name='Requirement Category ID:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regulatoryreq_entered_by', to=settings.AUTH_USER_MODEL)),
                ('interestedparty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interestedparty', to='issues_9001.InterestedParties', verbose_name='Interested Party ID:')),
                ('responsibility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regulatoryresponsibility', to=settings.AUTH_USER_MODEL, verbose_name='Responsibility:')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:')),
            ],
        ),
        migrations.AddField(
            model_name='mod9001_issues',
            name='process_OpportunitiesThreats',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='process_OpportunitiesThreats', to='issues_9001.process_OpportunitiesThreats', verbose_name='Process Opportunities/Threats:'),
        ),
        migrations.AddField(
            model_name='mod9001_issues',
            name='process_StrengthWeakness',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='process_StrengthWeakness', to='issues_9001.process_StrengthWeakness', verbose_name='process Strength/Weakness:'),
        ),
        migrations.AddField(
            model_name='mod9001_issues',
            name='responsibility',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsibility', to=settings.AUTH_USER_MODEL, verbose_name='Responsibility:'),
        ),
        migrations.AddField(
            model_name='mod9001_issues',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues_9001.Country'),
        ),
    ]
